# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: coconut/protos/backend/backend.proto

import sys
_b=sys.version_info[0]<3 and (lambda x:x) or (lambda x:x.encode('latin1'))
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


from coconut.protos.tasks import task_pb2 as coconut_dot_protos_dot_tasks_dot_task__pb2


DESCRIPTOR = _descriptor.FileDescriptor(
  name='coconut/protos/backend/backend.proto',
  package='backend',
  syntax='proto3',
  serialized_options=_b('Z-gitlab.wisburg.com/coconut/coconut/pb/backend'),
  serialized_pb=_b('\n$coconut/protos/backend/backend.proto\x12\x07\x62\x61\x63kend\x1a\x1f\x63oconut/protos/tasks/task.proto\"\x12\n\x10TaskStateSetResp2\x92\x04\n\x0bTaskBackend\x12\x36\n\x0eRPCPublishTask\x12\x10.tasks.Signature\x1a\x10.tasks.Signature\"\x00\x12\x43\n\x16RPCSetTaskStateStarted\x12\x0c.tasks.State\x1a\x19.backend.TaskStateSetResp\"\x00\x12\x44\n\x17RPCSetTaskStateReceived\x12\x0c.tasks.State\x1a\x19.backend.TaskStateSetResp\"\x00\x12\x43\n\x16RPCSetTaskStatePending\x12\x0c.tasks.State\x1a\x19.backend.TaskStateSetResp\"\x00\x12\x43\n\x16RPCSetTaskStateSuccess\x12\x0c.tasks.State\x1a\x19.backend.TaskStateSetResp\"\x00\x12\x41\n\x14RPCSetTaskStateRetry\x12\x0c.tasks.State\x1a\x19.backend.TaskStateSetResp\"\x00\x12\x43\n\x16RPCSetTaskStateFailure\x12\x0c.tasks.State\x1a\x19.backend.TaskStateSetResp\"\x00\x12.\n\x0fRPCGetTaskState\x12\x0b.tasks.UUID\x1a\x0c.tasks.State\"\x00\x42/Z-gitlab.wisburg.com/coconut/coconut/pb/backendb\x06proto3')
  ,
  dependencies=[coconut_dot_protos_dot_tasks_dot_task__pb2.DESCRIPTOR,])




_TASKSTATESETRESP = _descriptor.Descriptor(
  name='TaskStateSetResp',
  full_name='backend.TaskStateSetResp',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=82,
  serialized_end=100,
)

DESCRIPTOR.message_types_by_name['TaskStateSetResp'] = _TASKSTATESETRESP
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

TaskStateSetResp = _reflection.GeneratedProtocolMessageType('TaskStateSetResp', (_message.Message,), dict(
  DESCRIPTOR = _TASKSTATESETRESP,
  __module__ = 'coconut.protos.backend.backend_pb2'
  # @@protoc_insertion_point(class_scope:backend.TaskStateSetResp)
  ))
_sym_db.RegisterMessage(TaskStateSetResp)


DESCRIPTOR._options = None

_TASKBACKEND = _descriptor.ServiceDescriptor(
  name='TaskBackend',
  full_name='backend.TaskBackend',
  file=DESCRIPTOR,
  index=0,
  serialized_options=None,
  serialized_start=103,
  serialized_end=633,
  methods=[
  _descriptor.MethodDescriptor(
    name='RPCPublishTask',
    full_name='backend.TaskBackend.RPCPublishTask',
    index=0,
    containing_service=None,
    input_type=coconut_dot_protos_dot_tasks_dot_task__pb2._SIGNATURE,
    output_type=coconut_dot_protos_dot_tasks_dot_task__pb2._SIGNATURE,
    serialized_options=None,
  ),
  _descriptor.MethodDescriptor(
    name='RPCSetTaskStateStarted',
    full_name='backend.TaskBackend.RPCSetTaskStateStarted',
    index=1,
    containing_service=None,
    input_type=coconut_dot_protos_dot_tasks_dot_task__pb2._STATE,
    output_type=_TASKSTATESETRESP,
    serialized_options=None,
  ),
  _descriptor.MethodDescriptor(
    name='RPCSetTaskStateReceived',
    full_name='backend.TaskBackend.RPCSetTaskStateReceived',
    index=2,
    containing_service=None,
    input_type=coconut_dot_protos_dot_tasks_dot_task__pb2._STATE,
    output_type=_TASKSTATESETRESP,
    serialized_options=None,
  ),
  _descriptor.MethodDescriptor(
    name='RPCSetTaskStatePending',
    full_name='backend.TaskBackend.RPCSetTaskStatePending',
    index=3,
    containing_service=None,
    input_type=coconut_dot_protos_dot_tasks_dot_task__pb2._STATE,
    output_type=_TASKSTATESETRESP,
    serialized_options=None,
  ),
  _descriptor.MethodDescriptor(
    name='RPCSetTaskStateSuccess',
    full_name='backend.TaskBackend.RPCSetTaskStateSuccess',
    index=4,
    containing_service=None,
    input_type=coconut_dot_protos_dot_tasks_dot_task__pb2._STATE,
    output_type=_TASKSTATESETRESP,
    serialized_options=None,
  ),
  _descriptor.MethodDescriptor(
    name='RPCSetTaskStateRetry',
    full_name='backend.TaskBackend.RPCSetTaskStateRetry',
    index=5,
    containing_service=None,
    input_type=coconut_dot_protos_dot_tasks_dot_task__pb2._STATE,
    output_type=_TASKSTATESETRESP,
    serialized_options=None,
  ),
  _descriptor.MethodDescriptor(
    name='RPCSetTaskStateFailure',
    full_name='backend.TaskBackend.RPCSetTaskStateFailure',
    index=6,
    containing_service=None,
    input_type=coconut_dot_protos_dot_tasks_dot_task__pb2._STATE,
    output_type=_TASKSTATESETRESP,
    serialized_options=None,
  ),
  _descriptor.MethodDescriptor(
    name='RPCGetTaskState',
    full_name='backend.TaskBackend.RPCGetTaskState',
    index=7,
    containing_service=None,
    input_type=coconut_dot_protos_dot_tasks_dot_task__pb2._UUID,
    output_type=coconut_dot_protos_dot_tasks_dot_task__pb2._STATE,
    serialized_options=None,
  ),
])
_sym_db.RegisterServiceDescriptor(_TASKBACKEND)

DESCRIPTOR.services_by_name['TaskBackend'] = _TASKBACKEND

# @@protoc_insertion_point(module_scope)
